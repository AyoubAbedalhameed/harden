#!/usr/bin/env bash

declare -A kernel

## net.ipv4.tcp_syncookies
kernel[net.ipv4.tcp_syncookies,0]="1" # value
kernel[net.ipv4.tcp_syncookies,1]="Prevent against the common SYN flood attack" # message
kernel[net.ipv4.tcp_syncookies,2]="network" # type

## net.ipv4.conf.all.rp_filter
kernel[net.ipv4.conf.all.rp_filter,0]="1" # value
kernel[net.ipv4.conf.all.rp_filter,1]="Prevents a cracker from using a spoofing attack against the IP address of the server" # message
kernel[net.ipv4.conf.all.rp_filter,2]="network" # type

## net.ipv4.conf.default.rp_filter
kernel[net.ipv4.conf.default.rp_filter,0]="1" # value
kernel[net.ipv4.conf.default.rp_filter,1]="Prevents a cracker from using a spoofing attack against the IP address of the server" # message
kernel[net.ipv4.conf.default.rp_filter,2]="network" # type

## kernel.kptr_restrict
kernel[kernel.kptr_restrict,0]="2" # value
kernel[kernel.kptr_restrict,1]="Restricting access to kernel pointers in the proc filesystem" # message
kernel[kernel.kptr_restrict,2]="self_protection" # type

## net.core.bpf_jit_harden
kernel[net.core.bpf_jit_harden,0]="1" # value
kernel[net.core.bpf_jit_harden,1]="eBPF (Extended Berkley Packet Filter) hardening" # message
kernel[net.core.bpf_jit_harden,2]="self_protection" # type

## kernel.unprivileged_bpf_disabled
kernel[kernel.unprivileged_bpf_disabled,0]="1" # value
kernel[kernel.unprivileged_bpf_disabled,1]="eBPF (Extended Berkley Packet Filter) hardening" # message
kernel[kernel.unprivileged_bpf_disabled,2]="self_protection" # type

## kernel.yama.ptrace_scope
kernel[kernel.yama.ptrace_scope,0]="2" # value
kernel[kernel.yama.ptrace_scope,1]="ptrace is a system call that allows a program to alter and inspect another running process. This restricts usage of ptrace to only processes with the CAP_SYS_PTRACE capability" # message
kernel[kernel.yama.ptrace_scope,2]="user_space" # type

## module.sig_enforce
kernel[module.sig_enforce,0]="1" # value
kernel[module.sig_enforce,1]="Restricting modules loading" # message
kernel[module.sig_enforce,2]="self_protection" # type

## kernel.kexec_load_disabled
kernel[kernel.kexec_load_disabled,0]="1" # value
kernel[kernel.kexec_load_disabled,1]="Disable kexec. This functionality can be abused to load a malicious kernel and gain arbitrary code execution in kernel mode, so this sysctl disables it" # message
kernel[kernel.kexec_load_disabled,2]="self_protection" # type

## kernel.printk
kernel[kernel.printk,0]="3,3,3,3" # value
kernel[kernel.printk,1]="Restrict the kernel log to the CAP_SYSLOG capability" # message
kernel[kernel.printk,2]="self_protection" # type

## dev.tty.ldisc_autoload
kernel[dev.tty.ldisc_autoload,0]="0" # value
kernel[dev.tty.ldisc_autoload,1]="Restricts loading TTY line disciplines to the CAP_SYS_MODULE capability to prevent unprivileged attackers from loading vulnerable line disciplines with the TIOCSETD ioctl" # message
kernel[dev.tty.ldisc_autoload,2]="self_protection" # type

## vm.unprivileged_userfaultfd
kernel[vm.unprivileged_userfaultfd,0]="0" # value
kernel[vm.unprivileged_userfaultfd,1]="Restrict userfaultfd() syscall (often abused to exploit use-after-free flaws) syscall to the CAP_SYS_PTRACE capability" # message
kernel[vm.unprivileged_userfaultfd,2]="self_protection" # type

## kernel.sysrq
kernel[kernel.sysrq,0]="4" # value
kernel[kernel.sysrq,1]="Disable SysRq completely. The SysRq key exposes a lot of potentially dangerous debugging functionality to unprivileged users, it can also be triggered remotely" # message
kernel[kernel.sysrq,2]="self_protection" # type

## kernel.unprivileged_userns_clone
kernel[kernel.unprivileged_userns_clone,0]="0" # value
kernel[kernel.unprivileged_userns_clone,1]="User namespaces are a feature in the kernel which aim to improve sandboxing. This feature exposes significant kernel attack surface for privilege escalation" # message
kernel[kernel.unprivileged_userns_clone,2]="self_protection" # type

## kernel.perf_event_paranoid
kernel[kernel.perf_event_paranoid,0]="3" # value
kernel[kernel.perf_event_paranoid,1]="Restricts all usage of performance events to the CAP_PERFMON capability, performance events add considerable kernel attack surface and have caused abundant vulnerabilities" # message
kernel[kernel.perf_event_paranoid,2]="self_protection" # type

## net.ipv4.tcp_rfc1337
kernel[net.ipv4.tcp_rfc1337,0]="1" # value
kernel[net.ipv4.tcp_rfc1337,1]="This protects against time-wait assassination by dropping RST packets for sockets in the time-wait state" # message
kernel[net.ipv4.tcp_rfc1337,2]="network" # type

## net.ipv4.conf.all.accept_redirects
kernel[net.ipv4.conf.all.accept_redirects,0]="0" # value
kernel[net.ipv4.conf.all.accept_redirects,1]="These disable ICMP redirect acceptance and sending to prevent man-in-the-middle attacks and minimise information disclosure" # message
kernel[net.ipv4.conf.all.accept_redirects,2]="network" # type

## net.ipv4.conf.default.accept_redirects
kernel[net.ipv4.conf.default.accept_redirects,0]="0" # value
kernel[net.ipv4.conf.default.accept_redirects,1]="These disable ICMP redirect acceptance and sending to prevent man-in-the-middle attacks and minimise information disclosure" # message
kernel[net.ipv4.conf.default.accept_redirects,2]="network" # type

## net.ipv4.conf.all.secure_redirects
kernel[net.ipv4.conf.all.secure_redirects,0]="0" # value
kernel[net.ipv4.conf.all.secure_redirects,1]="These disable ICMP redirect acceptance and sending to prevent man-in-the-middle attacks and minimise information disclosure" # message
kernel[net.ipv4.conf.all.secure_redirects,2]="network" # type

## net.ipv4.conf.default.secure_redirects
kernel[net.ipv4.conf.default.secure_redirects,0]="0" # value
kernel[net.ipv4.conf.default.secure_redirects,1]="These disable ICMP redirect acceptance and sending to prevent man-in-the-middle attacks and minimise information disclosure" # message
kernel[net.ipv4.conf.default.secure_redirects,2]="network" # type

## net.ipv6.conf.all.accept_redirects
kernel[net.ipv6.conf.all.accept_redirects,0]="0" # value
kernel[net.ipv6.conf.all.accept_redirects,1]="These disable ICMP redirect acceptance and sending to prevent man-in-the-middle attacks and minimise information disclosure" # message
kernel[net.ipv6.conf.all.accept_redirects,2]="network" # type

## net.ipv6.conf.default.accept_redirects
kernel[net.ipv6.conf.default.accept_redirects,0]="0" # value
kernel[net.ipv6.conf.default.accept_redirects,1]="These disable ICMP redirect acceptance and sending to prevent man-in-the-middle attacks and minimise information disclosure" # message
kernel[net.ipv6.conf.default.accept_redirects,2]="network" # type

## net.ipv4.conf.all.send_redirects
kernel[net.ipv4.conf.all.send_redirects,0]="0" # value
kernel[net.ipv4.conf.all.send_redirects,1]="These disable ICMP redirect acceptance and sending to prevent man-in-the-middle attacks and minimise information disclosure" # message
kernel[net.ipv4.conf.all.send_redirects,2]="network" # type

## net.ipv4.conf.default.send_redirects
kernel[net.ipv4.conf.default.send_redirects,0]="0" # value
kernel[net.ipv4.conf.default.send_redirects,1]="These disable ICMP redirect acceptance and sending to prevent man-in-the-middle attacks and minimise information disclosure" # message
kernel[net.ipv4.conf.default.send_redirects,2]="network" # type

## net.ipv4.icmp_echo_ignore_all
kernel[net.ipv4.icmp_echo_ignore_all,0]="1" # value
kernel[net.ipv4.icmp_echo_ignore_all,1]="This setting makes your system ignore all ICMP requests to avoid Smurf attacks, make the device more difficult to enumerate on the network and prevent clock fingerprinting through ICMP timestamps" # message
kernel[net.ipv4.icmp_echo_ignore_all,2]="network" # type

## net.ipv4.ip_forward
kernel[net.ipv4.ip_forward,0]="0" # value
kernel[net.ipv4.ip_forward,1]="Controls IP packet forwarding" # message
kernel[net.ipv4.ip_forward,2]="network" # type

## net.ipv4.conf.default.accept_source_route
kernel[net.ipv4.conf.default.accept_source_route,0]="0" # value
kernel[net.ipv4.conf.default.accept_source_route,1]="Do not accept source routing" # message
kernel[net.ipv4.conf.default.accept_source_route,2]="network" # type

## kernel.core_uses_pid
kernel[kernel.core_uses_pid,0]="1" # value
kernel[kernel.core_uses_pid,1]="Controls whether core dumps will append the PID to the core filename. Useful for debugging multi-threaded applications" # message
kernel[kernel.core_uses_pid,2]="self_protection" # type

## net.ipv4.tcp_synack_retries
kernel[net.ipv4.tcp_synack_retries,0]="5" # value
kernel[net.ipv4.tcp_synack_retries,1]="Turn on SYN-flood protections" # message
kernel[net.ipv4.tcp_synack_retries,2]="network" # type

## net.ipv4.conf.all.accept_source_route
kernel[net.ipv4.conf.all.accept_source_route,0]="0" # value
kernel[net.ipv4.conf.all.accept_source_route,1]="Do not accept source routing" # message
kernel[net.ipv4.conf.all.accept_source_route,2]="network" # type

## net.ipv4.conf.all.log_martians
kernel[net.ipv4.conf.all.log_martians,0]="1" # value
kernel[net.ipv4.conf.all.log_martians,1]="Log packets with impossible addresses to kernel log? yes" # message
kernel[net.ipv4.conf.all.log_martians,2]="network" # type

## net.ipv4.icmp_echo_ignore_broadcasts
kernel[net.ipv4.icmp_echo_ignore_broadcasts,0]="1" # value
kernel[net.ipv4.icmp_echo_ignore_broadcasts,1]="Ignore all ICMP ECHO and TIMESTAMP requests sent to it via broadcast/multicast" # message
kernel[net.ipv4.icmp_echo_ignore_broadcasts,2]="network" # type

## net.ipv6.conf.default.router_solicitations
kernel[net.ipv6.conf.default.router_solicitations,0]="0" # value
kernel[net.ipv6.conf.default.router_solicitations,1]="Number of Router Solicitations to send until assuming no routers are present. This is host and not router" # message
kernel[net.ipv6.conf.default.router_solicitations,2]="network" # type

## net.ipv6.conf.default.accept_ra_rtr_pref
kernel[net.ipv6.conf.default.accept_ra_rtr_pref,0]="0" # value
kernel[net.ipv6.conf.default.accept_ra_rtr_pref,1]="Accept Router Preference in RA?" # message
kernel[net.ipv6.conf.default.accept_ra_rtr_pref,2]="network" # type

## net.ipv6.conf.default.accept_ra_pinfo
kernel[net.ipv6.conf.default.accept_ra_pinfo,0]="0" # value
kernel[net.ipv6.conf.default.accept_ra_pinfo,1]="Learn Prefix Information in Router Advertisement" # message
kernel[net.ipv6.conf.default.accept_ra_pinfo,2]="network" # type

## net.ipv6.conf.default.accept_ra_defrtr
kernel[net.ipv6.conf.default.accept_ra_defrtr,0]="0" # value
kernel[net.ipv6.conf.default.accept_ra_defrtr,1]="Setting controls whether the system will accept Hop Limit settings from a router advertisement" # message
kernel[net.ipv6.conf.default.accept_ra_defrtr,2]="network" # type

## net.ipv6.conf.default.autoconf
kernel[net.ipv6.conf.default.autoconf,0]="0" # value
kernel[net.ipv6.conf.default.autoconf,1]="Router advertisements can cause the system to assign a global unicast address to an interface" # message
kernel[net.ipv6.conf.default.autoconf,2]="network" # type

## net.ipv6.conf.default.dad_transmits
kernel[net.ipv6.conf.default.dad_transmits,0]="0" # value
kernel[net.ipv6.conf.default.dad_transmits,1]="How many neighbor solicitations to send out per address?" # message
kernel[net.ipv6.conf.default.dad_transmits,2]="network" # type

## net.ipv6.conf.default.max_addresses
kernel[net.ipv6.conf.default.max_addresses,0]="1" # value
kernel[net.ipv6.conf.default.max_addresses,1]="How many global unicast IPv6 addresses can be assigned to each interface?" # message
kernel[net.ipv6.conf.default.max_addresses,2]="network" # type

## fs.file-max
kernel[fs.file-max,0]="65535" # value
kernel[fs.file-max,1]="Increase system file descriptor limit" # message
kernel[fs.file-max,2]="self_protection" # type

## kernel.pid_max
kernel[kernel.pid_max,0]="65536" # value
kernel[kernel.pid_max,1]="Allow for more PIDs" # message
kernel[kernel.pid_max,2]="self_protection" # type

## net.ipv4.ip_local_port_range
kernel[net.ipv4.ip_local_port_range,0]="2000,65000" # value
kernel[net.ipv4.ip_local_port_range,1]="Increase system IP port limits" # message
kernel[net.ipv4.ip_local_port_range,2]="network" # type

## kernel.exec-shield
kernel[kernel.exec-shield,0]="2" # value
kernel[kernel.exec-shield,1]="Enable ExecShield protection. Set value to 1 or 2 (recommended)" # message
kernel[kernel.exec-shield,2]="self_protection" # type

## kernel.randomize_va_space
kernel[kernel.randomize_va_space,0]="2" # value
kernel[kernel.randomize_va_space,1]="Enable ExecShield protection. Set value to 1 or 2 (recommended)" # message
kernel[kernel.randomize_va_space,2]="self_protection" # type

## vm.mmap_rnd_bits
kernel[vm.mmap_rnd_bits,0]="32" # value
kernel[vm.mmap_rnd_bits,1]="Increase the bits of entropy used for mmap ASLR, improving its effectiveness. ASLR is a common exploit mitigation which randomises the position of critical parts of a process in memory" # message
kernel[vm.mmap_rnd_bits,2]="user_space" # type

## vm.mmap_rnd_compat_bits
kernel[vm.mmap_rnd_compat_bits,0]="16" # value
kernel[vm.mmap_rnd_compat_bits,1]="Increase the bits of entropy used for mmap ASLR, improving its effectiveness. ASLR is a common exploit mitigation which randomises the position of critical parts of a process in memory" # message
kernel[vm.mmap_rnd_compat_bits,2]="user_space" # type

## fs.protected_symlinks
kernel[fs.protected_symlinks,0]="1" # value
kernel[fs.protected_symlinks,1]="Prevent many common TOCTOU races" # message
kernel[fs.protected_symlinks,2]="user_space" # type

## fs.protected_hardlinks
kernel[fs.protected_hardlinks,0]="1" # value
kernel[fs.protected_hardlinks,1]="Prevent many common TOCTOU races" # message
kernel[fs.protected_hardlinks,2]="user_space" # type

## fs.protected_fifos
kernel[fs.protected_fifos,0]="2" # value
kernel[fs.protected_fifos,1]="These prevent creating files in potentially attacker-controlled environments. To make data spoofing attacks more difficult" # message
kernel[fs.protected_fifos,2]="user_space" # type

## fs.protected_regular
kernel[fs.protected_regular,0]="2" # value
kernel[fs.protected_regular,1]="These prevent creating files in potentially attacker-controlled environments. To make data spoofing attacks more difficult" # message
kernel[fs.protected_regular,2]="user_space" # type

## kernel.dmesg_restrict
kernel[kernel.dmesg_restrict,0]="1" # value
kernel[kernel.dmesg_restrict,1]="Restricts the kernel log to the CAP_SYSLOG capability" # message
kernel[kernel.dmesg_restrict,2]="self_protection" # type

## net.ipv4.tcp_sack
kernel[net.ipv4.tcp_sack,0]="0" # value
kernel[net.ipv4.tcp_sack,1]="SACK is commonly exploited and unnecessary in many circumstances, so it should be disabled if it is not required" # message
kernel[net.ipv4.tcp_sack,2]="network" # type

## net.ipv4.tcp_dsack
kernel[net.ipv4.tcp_dsack,0]="0" # value
kernel[net.ipv4.tcp_dsack,1]="SACK is commonly exploited and unnecessary in many circumstances, so it should be disabled if it is not required" # message
kernel[net.ipv4.tcp_dsack,2]="network" # type

## net.ipv4.tcp_fack
kernel[net.ipv4.tcp_fack,0]="0" # value
kernel[net.ipv4.tcp_fack,1]="SACK is commonly exploited and unnecessary in many circumstances, so it should be disabled if it is not required" # message
kernel[net.ipv4.tcp_fack,2]="network" # type

