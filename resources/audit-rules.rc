#!/usr/bin/env bash 

declare -A audit_rules 

# Self Auditing ---------------------------------------------------------------

audit_rules[rules.auditd_auditing,0]=7
audit_rules[rules.auditd_auditing,1]="-w /var/log/audit -k auditlog"   ## Audit the audit logs

audit_rules[rules.auditd_auditing,2]="-w /etc/audit -p wa -k auditconfig" ## Auditd configuration Auditing
audit_rules[rules.auditd_auditing,3]="-w /etc/libaudit.conf -p wa -k auditconfig"
audit_rules[rules.auditd_auditing,4]="-w /etc/audisp -p wa -k audispconfig"

audit_rules[rules.auditd_auditing,5]="-w /sbin/auditctl -p x -k audittools" ## Monitor for use of audit management tools
audit_rules[rules.auditd_auditing,6]="-w /sbin/auditd -p x -k audittools"
audit_rules[rules.auditd_auditing,7]="-w /usr/sbin/augenrules -p x -k audittools"

audit_rules[rules.auditd_auditing,d]="Auditing auditd related configuration, Logs access & monitoring auditd management tools usage"

# Filters ---------------------------------------------------------------------


audit_rules[rules.filters,0]=13
audit_rules[rules.filters,1]="-a always,exclude -F msgtype=AVC"     ## Ignore SELinux AVC records

audit_rules[rules.filters,2]="-a always,exclude -F msgtype=CWD"     ## Ignore current working directory records

audit_rules[rules.filters,3]="-a never,user -F subj_type=crond_t"   ## Cron jobs fill the logs with stuff we normally don't want (works with SELinux)
audit_rules[rules.filters,4]="-a never,exit -F subj_type=crond_t"

audit_rules[rules.filters,5]="-a always,exclude -F msgtype=CRYPTO_KEY_USER"       ## This is not very interesting and wastes a lot of space if the server is public facing

audit_rules[rules.filters,6]="-a never,exit -F arch=b32 -S fork -F success=0 -F path=/usr/lib/vmware-tools -F subj_type=initrc_t -F exit=-2"        ## VMWare tools
audit_rules[rules.filters,7]="-a never,exit -F arch=b64 -S fork -F success=0 -F path=/usr/lib/vmware-tools -F subj_type=initrc_t -F exit=-2"

audit_rules[rules.filters,8]="-a never,exit -F arch=b32 -F dir=/dev/shm -k sharedmemaccess"     ## High Volume Event Filter (especially on Linux Workstations)
audit_rules[rules.filters,9]="-a never,exit -F arch=b64 -F dir=/dev/shm -k sharedmemaccess"
audit_rules[rules.filters,10]="-a never,exit -F arch=b32 -F dir=/var/lock/lvm -k locklvm"
audit_rules[rules.filters,11]="-a never,exit -F arch=b64 -F dir=/var/lock/lvm -k locklvm"

audit_rules[rules.filters,12]="-a never,exit -F arch=b32 -F path=/opt/filebeat -k filebeat"      ## FileBeat
audit_rules[rules.filters,13]="-a never,exit -F arch=b64 -F path=/opt/filebeat -k filebeat"
audit_rules[rules.filters,d]="These rules are for excluding some system calls and events from being monitored to avoid overwhelming the logs of redundant or dummy stuff"



audit_rules[rules.kernel,0]=9
audit_rules[rules.kernel,1]="-w /etc/sysctl.conf -p wa -k sysctl"   ## Kernel parameters
audit_rules[rules.kernel,2]="-w /etc/sysctl.d -p wa -k sysctl"

audit_rules[rules.kernel,3]="-a always,exit -F perm=x -F auid!=-1 -F path=/sbin/insmod -k modules"  ## Kernel module loading and unloading
audit_rules[rules.kernel,4]="-a always,exit -F perm=x -F auid!=-1 -F path=/sbin/modprobe -k modules"
audit_rules[rules.kernel,5]="-a always,exit -F perm=x -F auid!=-1 -F path=/sbin/rmmod -k modules"
audit_rules[rules.kernel,6]="-a always,exit -F arch=b64 -S finit_module -S init_module -S delete_module -F auid!=-1 -k modules"
audit_rules[rules.kernel,7]="-a always,exit -F arch=b32 -S finit_module -S init_module -S delete_module -F auid!=-1 -k modules"

audit_rules[rules.kernel,8]="-w /etc/modprobe.conf -p wa -k modprobe"   ## Modprobe configuration
audit_rules[rules.kernel,9]="-w /etc/modprobe.d -p wa -k modprobe"

audit_rules[rules.kernel,d]="These rules are used for auditing the modification of kernel parameters files & modprobe config files under /etc in addition to monitor kernel modules loading, unloading, adding & removing actions."








audit_rules[rules.critical_sys_call,0]=8
audit_rules[rules.critical_sys_call,1]="-a always,exit -F arch=b64 -S kexec_load -k KEXEC"  ## KExec usage (all actions)
audit_rules[rules.critical_sys_call,2]="-a always,exit -F arch=b32 -S sys_kexec_load -k KEXEC"

audit_rules[rules.critical_sys_call,3]="-a always,exit -F arch=b32 -S mknod -S mknodat -k specialfiles" ## Special files
audit_rules[rules.critical_sys_call,4]="-a always,exit -F arch=b64 -S mknod -S mknodat -k specialfiles"

audit_rules[rules.critical_sys_call,5]="-a always,exit -F arch=b64 -S mount -S umount2 -F auid!=-1 -k mount"    ## Mount operations (only attributable)
audit_rules[rules.critical_sys_call,6]="-a always,exit -F arch=b32 -S mount -S umount -S umount2 -F auid!=-1 -k mount"


audit_rules[rules.critical_sys_call,7]="-a always,exit -F arch=b64 -S swapon -S swapoff -F auid!=-1 -k swap"    ## Change swap (only attributable)
audit_rules[rules.critical_sys_call,8]="-a always,exit -F arch=b32 -S swapon -S swapoff -F auid!=-1 -k swap"

audit_rules[rules.critical_sys_call,d]="These rules are used for monitoring critical system calls on the system" 





#Auditing the access of critical configuration files: 
audit_rules[rules.critical_etc_file,0]=30
audit_rules[rules.critical_etc_file,1]="-w /etc/localtime -p wa -k localtime"   ### Local time zone
audit_rules[rules.critical_etc_file,2]="-w /etc/group -p wa -k etcgroup"        ## User, group, password databases
audit_rules[rules.critical_etc_file,3]="-w /etc/passwd -p wa -k etcpasswd"
audit_rules[rules.critical_etc_file,4]="-w /etc/gshadow -k etcgroup"
audit_rules[rules.critical_etc_file,5]="-w /etc/shadow -k etcpasswd"
audit_rules[rules.critical_etc_file,6]="-w /etc/security/opasswd -k opasswd"

audit_rules[rules.critical_etc_file,7]="-w /etc/sudoers -p wa -k actions"       ## Sudoers file changes
audit_rules[rules.critical_etc_file,8]="-w /etc/sudoers.d -p wa -k actions"

audit_rules[rules.critical_etc_file,9]="-w /etc/inittab -p wa -k init"          ## System startup scripts
audit_rules[rules.critical_etc_file,10]="-w /etc/init.d -p wa -k init"
audit_rules[rules.critical_etc_file,11]="-w /etc/init -p wa -k init"

audit_rules[rules.critical_etc_file,12]="-w /etc/ld.so.conf -p wa -k libpath"    ## Library search paths
audit_rules[rules.critical_etc_file,13]="-w /etc/ld.so.conf.d -p wa -k libpath"

audit_rules[rules.critical_etc_file,14]="-w /etc/ld.so.preload -p wa -k systemwide_preloads"     ## Systemwide library preloads (LD_PRELOAD)

audit_rules[rules.critical_etc_file,15]="-w /etc/issue -p wa -k etcissue"       ### Changes to issue
audit_rules[rules.critical_etc_file,16]="-w /etc/issue.net -p wa -k etcissue"
audit_rules[rules.critical_etc_file,17]="-w /etc/ssh/sshd_config -k sshd"       ## SSH configuration
audit_rules[rules.critical_etc_file,18]="-w /etc/ssh/sshd_config.d -k sshd"

audit_rules[rules.critical_etc_file,19]="-w /etc/systemd -p wa -k systemd"     ## systemd configuration.

audit_rules[rules.critical_etc_file,20]="-w /etc/selinux -p wa -k mac_policy"      ## SELinux events that modify the system's Mandatory Access Controls (MAC)

audit_rules[rules.critical_etc_file,21]="-w /etc/issue -p r -k recon"               ##re
audit_rules[rules.critical_etc_file,22]="-w /etc/hostname -p r -k recon"

audit_rules[rules.critical_etc_file,23]="-w /etc/profile.d -p wa -k shell_profiles"    ## Shell/profile configurations
audit_rules[rules.critical_etc_file,24]="-w /etc/profile -p wa -k shell_profiles"
audit_rules[rules.critical_etc_file,25]="-w /etc/shells -p wa -k shell_profiles"
audit_rules[rules.critical_etc_file,26]="-w /etc/bashrc -p wa -k shell_profiles"
audit_rules[rules.critical_etc_file,27]="-w /etc/csh.cshrc -p wa -k shell_profiles"
audit_rules[rules.critical_etc_file,28]="-w /etc/csh.login -p wa -k shell_profiles"
audit_rules[rules.critical_etc_file,29]="-w /etc/fish -p wa -k shell_profiles"
audit_rules[rules.critical_etc_file,30]="-w /etc/zsh -p wa -k shell_profiles"

audit_rules[rules.critical_etc_file,d]="These rules are used for auditing the access/modifications of some critical configuration under /etc/ Directory"


## PAM configuration
audit_rules[rules.pam_config,0]=7
audit_rules[rules.pam_config,1]="-w /etc/pam.d -p wa -k pam"
audit_rules[rules.pam_config,2]="-w /etc/security/limits.conf -p wa  -k pam"
audit_rules[rules.pam_config,3]="-w /etc/security/limits.d -p wa  -k pam"
audit_rules[rules.pam_config,4]="-w /etc/security/pam_env.conf -p wa -k pam"
audit_rules[rules.pam_config,5]="-w /etc/security/namespace.conf -p wa -k pam"
audit_rules[rules.pam_config,6]="-w /etc/security/namespace.d -p wa -k pam"
audit_rules[rules.pam_config,7]="-w /etc/security/namespace.init -p wa -k pam"
audit_rules[rules.pam_config,d]="These rules are used for auditing yout system's PAM configuration, which is a suite of libraries that allows a Linux system administrator to configure methods to authenticate users."



#Auditing the access of cron related configuration and logging files.
audit_rules[rules.cron,0]=9 
audit_rules[rules.cron,1]="-w /etc/cron.allow -p wa -k cron"   ## Cron configuration & scheduled jobs
audit_rules[rules.cron,2]="-w /etc/cron.deny -p wa -k cron"
audit_rules[rules.cron,3]="-w /etc/cron.d -p wa -k cron"
audit_rules[rules.cron,4]="-w /etc/cron.daily -p wa -k cron"
audit_rules[rules.cron,5]="-w /etc/cron.hourly -p wa -k cron"
audit_rules[rules.cron,6]="-w /etc/cron.monthly -p wa -k cron"
audit_rules[rules.cron,7]="-w /etc/cron.weekly -p wa -k cron"
audit_rules[rules.cron,8]="-w /etc/crontab -p wa -k cron"
audit_rules[rules.cron,9]="-w /var/spool/cron -k cron"         ## cron logs
audit_rules[rules.cron,d]="These rules are used to audit and monitor the modifications of Cron_related configuration files, cron tabs & cron logs"




#Monitoring the execution/use of critical commands/binaries: 
audit_rules[rules.critical_commands,0]=15

audit_rules[rules.critical_commands,1]="-w /usr/sbin/stunnel -p x -k stunnel"       ## Stunnel
audit_rules[rules.critical_commands,2]="-w /usr/bin/stunnel -p x -k stunnel"        

audit_rules[rules.critical_commands,3]="-w /usr/bin/passwd -p x -k passwd_modification"     ## Passwd

audit_rules[rules.critical_commands,4]="-w /usr/sbin/groupadd -p x -k group_modification"       ## Tools to change group identifiers
audit_rules[rules.critical_commands,5]="-w /usr/sbin/groupmod -p x -k group_modification"
audit_rules[rules.critical_commands,6]="-w /usr/sbin/addgroup -p x -k group_modification"
audit_rules[rules.critical_commands,7]="-w /usr/sbin/useradd -p x -k user_modification"
audit_rules[rules.critical_commands,8]="-w /usr/sbin/userdel -p x -k user_modification"
audit_rules[rules.critical_commands,9]="-w /usr/sbin/usermod -p x -k user_modification"
audit_rules[rules.critical_commands,10]="-w /usr/sbin/adduser -p x -k user_modification"

audit_rules[rules.critical_commands,11]="-w /bin/systemctl -p x -k systemd"        ## systemctl command execution.

audit_rules[rules.critical_commands,12]="-w /usr/bin/whoami -p x -k recon"      ## Reconnaissance
audit_rules[rules.critical_commands,13]="-w /usr/bin/id -p x -k recon"
audit_rules[rules.critical_commands,14]="-w /bin/hostname -p x -k recon"
audit_rules[rules.critical_commands,15]="-w /bin/uname -p x -k recon"
audit_rules[rules.critical_commands,d]="These rules is used for monitoring the execution and uses of critical commands and binaries"

## Login configuration and information
audit_rules[rules.login,0]=5
audit_rules[rules.login,1]="-w /etc/login.defs -p wa -k login"
audit_rules[rules.login,2]="-w /etc/securetty -p wa -k login"
audit_rules[rules.login,3]="-w /var/log/faillog -p wa -k login"
audit_rules[rules.login,4]="-w /var/log/lastlog -p wa -k login"
audit_rules[rules.login,5]="-w /var/log/tallylog -p wa -k login"
audit_rules[rules.login,d]="These rules are used to monitor the modifications of User's Logins logs and related configuration files which are /etc/login.defs and /etc/securetty"


## Network Environment
audit_rules[rules.network_environment,0]=11
audit_rules[rules.network_environment,1]="-a always,exit -F arch=b32 -S sethostname -S setdomainname -k network_modifications"      ### Changes to hostname
audit_rules[rules.network_environment,2]="-a always,exit -F arch=b64 -S sethostname -S setdomainname -k network_modifications"

audit_rules[rules.network_environment,3]="-a always,exit -F arch=b64 -S connect -F a2=16 -F success=1 -F key=network_connect_4"     ### Successful IPv4 Connections
audit_rules[rules.network_environment,4]="-a always,exit -F arch=b32 -S connect -F a2=16 -F success=1 -F key=network_connect_4"

audit_rules[rules.network_environment,5]="-a always,exit -F arch=b64 -S connect -F a2=28 -F success=1 -F key=network_connect_6"     ### Successful IPv6 Connections
audit_rules[rules.network_environment,6]="-a always,exit -F arch=b32 -S connect -F a2=28 -F success=1 -F key=network_connect_6"

audit_rules[rules.network_environment,7]="-w /etc/hosts -p wa -k network_modifications"     ### Changes to network-related config files
audit_rules[rules.network_environment,8]="-w /etc/sysconfig/network -p wa -k network_modifications"
audit_rules[rules.network_environment,9]="-w /etc/sysconfig/network-scripts -p w -k network_modifications"
audit_rules[rules.network_environment,10]="-w /etc/network -p wa -k network"

audit_rules[rules.network_environment,11]="-a always,exit -F dir=/etc/NetworkManager -F perm=wa -k network_modifications"

audit_rules[rules.network_environment,d]="These rules are used to audit the Network Environment in your system, in terms of configuration files modificatoins & Networking system calls"


## Monitoring Power state related commands/binaries. 
audit_rules[rules.power_state,0]=4
audit_rules[rules.power_state,1]="-w /sbin/shutdown -p x -k power"
audit_rules[rules.power_state,2]="-w /sbin/poweroff -p x -k power"
audit_rules[rules.power_state,3]="-w /sbin/reboot -p x -k power"
audit_rules[rules.power_state,4]="-w /sbin/halt -p x -k power"
audit_rules[rules.power_state,d]="These rules are used to monitor the use of power-state related commands on your machine which are: shudown, poweroff, reboot, halt"


## Auditing the Critical elements access failures. 

audit_rules[rules.access_failures,0]=8
audit_rules[rules.access_failures,1]="-a always,exit -F arch=b64 -S open -F dir=/etc -F success=0 -k unauthedfileaccess"
audit_rules[rules.access_failures,2]="-a always,exit -F arch=b64 -S open -F dir=/bin -F success=0 -k unauthedfileaccess"
audit_rules[rules.access_failures,3]="-a always,exit -F arch=b64 -S open -F dir=/sbin -F success=0 -k unauthedfileaccess"
audit_rules[rules.access_failures,4]="-a always,exit -F arch=b64 -S open -F dir=/usr/bin -F success=0 -k unauthedfileaccess"
audit_rules[rules.access_failures,5]="-a always,exit -F arch=b64 -S open -F dir=/usr/sbin -F success=0 -k unauthedfileaccess"
audit_rules[rules.access_failures,6]="-a always,exit -F arch=b64 -S open -F dir=/var -F success=0 -k unauthedfileaccess"
audit_rules[rules.access_failures,7]="-a always,exit -F arch=b64 -S open -F dir=/home -F success=0 -k unauthedfileaccess"
audit_rules[rules.access_failures,8]="-a always,exit -F arch=b64 -S open -F dir=/srv -F success=0 -k unauthedfileaccess"
audit_rules[rules.access_failures,d]="These rules are used for auditing the Failed Accesses to any system element"



## Process ID change (switching accounts) applications
audit_rules[rules.sudo,0]=4
audit_rules[rules.sudo,1]="-w /bin/su -p x -k priv_esc"
audit_rules[rules.sudo,2]="-w /usr/bin/sudo -p x -k priv_esc"
audit_rules[rules.sudo,3]="-w /etc/sudoers -p rw -k priv_esc"
audit_rules[rules.sudo,4]="-w /etc/sudoers.d -p rw -k priv_esc"
audit_rules[rules.sudo,d]="These rules are used for auditing switching accounts by minitoring the execution ob sudo and su commands in adition to track all sudo configuration files modifications"









## Discretionary Access Control (DAC) modifications
audit_rules[rules.dac,0]=26
audit_rules[rules.dac,1]="-a always,exit -F arch=b32 -S chmod -F auid>=1000 -F auid!=-1 -k perm_mod"
audit_rules[rules.dac,2]="-a always,exit -F arch=b32 -S chown -F auid>=1000 -F auid!=-1 -k perm_mod"
audit_rules[rules.dac,3]="-a always,exit -F arch=b32 -S fchmod -F auid>=1000 -F auid!=-1 -k perm_mod"
audit_rules[rules.dac,4]="-a always,exit -F arch=b32 -S fchmodat -F auid>=1000 -F auid!=-1 -k perm_mod"
audit_rules[rules.dac,5]="-a always,exit -F arch=b32 -S fchown -F auid>=1000 -F auid!=-1 -k perm_mod"
audit_rules[rules.dac,6]="-a always,exit -F arch=b32 -S fchownat -F auid>=1000 -F auid!=-1 -k perm_mod"
audit_rules[rules.dac,7]="-a always,exit -F arch=b32 -S fremovexattr -F auid>=1000 -F auid!=-1 -k perm_mod"
audit_rules[rules.dac,8]="-a always,exit -F arch=b32 -S fsetxattr -F auid>=1000 -F auid!=-1 -k perm_mod"
audit_rules[rules.dac,9]="-a always,exit -F arch=b32 -S lchown -F auid>=1000 -F auid!=-1 -k perm_mod"
audit_rules[rules.dac,10]="-a always,exit -F arch=b32 -S lremovexattr -F auid>=1000 -F auid!=-1 -k perm_mod"
audit_rules[rules.dac,11]="-a always,exit -F arch=b32 -S lsetxattr -F auid>=1000 -F auid!=-1 -k perm_mod"
audit_rules[rules.dac,12]="-a always,exit -F arch=b32 -S removexattr -F auid>=1000 -F auid!=-1 -k perm_mod"
audit_rules[rules.dac,13]="-a always,exit -F arch=b32 -S setxattr -F auid>=1000 -F auid!=-1 -k perm_mod"
audit_rules[rules.dac,14]="-a always,exit -F arch=b64 -S chmod  -F auid>=1000 -F auid!=-1 -k perm_mod"
audit_rules[rules.dac,15]="-a always,exit -F arch=b64 -S chown -F auid>=1000 -F auid!=-1 -k perm_mod"
audit_rules[rules.dac,16]="-a always,exit -F arch=b64 -S fchmod -F auid>=1000 -F auid!=-1 -k perm_mod"
audit_rules[rules.dac,17]="-a always,exit -F arch=b64 -S fchmodat -F auid>=1000 -F auid!=-1 -k perm_mod"
audit_rules[rules.dac,18]="-a always,exit -F arch=b64 -S fchown -F auid>=1000 -F auid!=-1 -k perm_mod"
audit_rules[rules.dac,19]="-a always,exit -F arch=b64 -S fchownat -F auid>=1000 -F auid!=-1 -k perm_mod"
audit_rules[rules.dac,20]="-a always,exit -F arch=b64 -S fremovexattr -F auid>=1000 -F auid!=-1 -k perm_mod"
audit_rules[rules.dac,21]="-a always,exit -F arch=b64 -S fsetxattr -F auid>=1000 -F auid!=-1 -k perm_mod"
audit_rules[rules.dac,22]="-a always,exit -F arch=b64 -S lchown -F auid>=1000 -F auid!=-1 -k perm_mod"
audit_rules[rules.dac,23]="-a always,exit -F arch=b64 -S lremovexattr -F auid>=1000 -F auid!=-1 -k perm_mod"
audit_rules[rules.dac,24]="-a always,exit -F arch=b64 -S lsetxattr -F auid>=1000 -F auid!=-1 -k perm_mod"
audit_rules[rules.dac,25]="-a always,exit -F arch=b64 -S removexattr -F auid>=1000 -F auid!=-1 -k perm_mod"
audit_rules[rules.dac,26]="-a always,exit -F arch=b64 -S setxattr -F auid>=1000 -F auid!=-1 -k perm_mod"
audit_rules[rules.dac,d]="these rules are used to audit Discretionary Access Control (DAC) modifications"


# Special Rules ---------------------------------------------------------------

## Suspicious activity
audit_rules[rules.suspicious_activities,0]=33
audit_rules[rules.suspicious_activities,1]="-w /usr/bin/curl -p x -k susp_activity"
audit_rules[rules.suspicious_activities,2]="-w /usr/bin/base64 -p x -k susp_activity"
audit_rules[rules.suspicious_activities,3]="-w /bin/nc -p x -k susp_activity"
audit_rules[rules.suspicious_activities,4]="-w /bin/netcat -p x -k susp_activity"
audit_rules[rules.suspicious_activities,5]="-w /usr/bin/ncat -p x -k susp_activity"
audit_rules[rules.suspicious_activities,6]="-w /usr/bin/ssh -p x -k susp_activity"
audit_rules[rules.suspicious_activities,7]="-w /usr/bin/scp -p x -k susp_activity"
audit_rules[rules.suspicious_activities,8]="-w /usr/bin/sftp -p x -k susp_activity"
audit_rules[rules.suspicious_activities,9]="-w /usr/bin/ftp -p x -k susp_activity"
audit_rules[rules.suspicious_activities,10]="-w /usr/bin/socat -p x -k susp_activity"
audit_rules[rules.suspicious_activities,11]="-w /usr/bin/wireshark -p x -k susp_activity"
audit_rules[rules.suspicious_activities,12]="-w /usr/bin/tshark -p x -k susp_activity"
audit_rules[rules.suspicious_activities,13]="-w /usr/bin/rawshark -p x -k susp_activity"
audit_rules[rules.suspicious_activities,14]="-w /usr/bin/rdesktop -p x -k susp_activity"
audit_rules[rules.suspicious_activities,15]="-w /usr/bin/nmap -p x -k susp_activity"

audit_rules[rules.suspicious_activities,16]="-w /sbin/iptables -p x -k sbin_susp"       ## Sbin suspicious activity
audit_rules[rules.suspicious_activities,17]="-w /sbin/ip6tables -p x -k sbin_susp"
audit_rules[rules.suspicious_activities,18]="-w /sbin/ifconfig -p x -k sbin_susp"
audit_rules[rules.suspicious_activities,19]="-w /usr/sbin/arptables -p x -k sbin_susp"
audit_rules[rules.suspicious_activities,20]="-w /usr/sbin/ebtables -p x -k sbin_susp"
audit_rules[rules.suspicious_activities,21]="-w /sbin/xtables-nft-multi -p x -k sbin_susp"
audit_rules[rules.suspicious_activities,22]="-w /usr/sbin/nft -p x -k sbin_susp"
audit_rules[rules.suspicious_activities,23]="-w /usr/sbin/tcpdump -p x -k sbin_susp"
audit_rules[rules.suspicious_activities,24]="-w /usr/sbin/traceroute -p x -k sbin_susp"
audit_rules[rules.suspicious_activities,25]="-w /usr/sbin/ufw -p x -k sbin_susp"

audit_rules[rules.suspicious_activities,26]="-w /usr/bin/dbus-send -p x -k dbus_send"   ## dbus-send invocation, may indicate privilege escalation CVE-2021-3560
audit_rules[rules.suspicious_activities,27]="-w /usr/bin/pkexec -p x -k pkexec"     ## pkexec invocation, may indicate privilege escalation CVE-2021-4034

audit_rules[rules.suspicious_activities,28]="-w /root/.ssh -p wa -k rootkey" ## root ssh key tampering


audit_rules[rules.suspicious_activities,29]="-w /var/run/utmp -p wa -k session" ## Session initiation information
audit_rules[rules.suspicious_activities,30]="-w /var/log/btmp -p wa -k session"
audit_rules[rules.suspicious_activities,31]="-w /var/log/wtmp -p wa -k session"
audit_rules[rules.suspicious_activities,32]="-w /usr/bin/wget -p x -k susp_activity"
audit_rules[rules.suspicious_activities,33]="-a always,exit -F dir=/home -F uid=0 -F auid>=1000 -F auid!=-1 -C auid!=obj_uid -k power_abuse"      ### Privilege Abuse, The purpose of this rule is to detect when an admin may be abusing power by looking in user's home dir.


audit_rules[rules.suspicious_activities,d]="These rules are used for auditing suspicious_activities by monitoring a set of critical common commands that may be used for doing suspicious actions"



## Injection
### These rules watch for code injection by the ptrace facility.
### This could indicate someone trying to do something bad or just debugging

audit_rules[rules.code_injection,0]=8
audit_rules[rules.code_injection,1]="-a always,exit -F arch=b32 -S ptrace -F a0=0x4 -k code_injection"
audit_rules[rules.code_injection,2]="-a always,exit -F arch=b64 -S ptrace -F a0=0x4 -k code_injection"
audit_rules[rules.code_injection,3]="-a always,exit -F arch=b32 -S ptrace -F a0=0x5 -k data_injection"
audit_rules[rules.code_injection,4]="-a always,exit -F arch=b64 -S ptrace -F a0=0x5 -k data_injection"
audit_rules[rules.code_injection,5]="-a always,exit -F arch=b32 -S ptrace -F a0=0x6 -k register_injection"
audit_rules[rules.code_injection,6]="-a always,exit -F arch=b64 -S ptrace -F a0=0x6 -k register_injection"
audit_rules[rules.code_injection,7]="-a always,exit -F arch=b32 -S ptrace -k tracing"
audit_rules[rules.code_injection,8]="-a always,exit -F arch=b64 -S ptrace -k tracing"
audit_rules[rules.code_injection,d]="These rules are used to catch indications for code injection by the ptrace facility, one matching rule log could indicate someone trying to do something bad or just debugging"




# Software Management ---------------------------------------------------------
audit_rules[rules.software_managmenet_auditing,0]=5

audit_rules[rules.software_managmenet_auditing,1]="-w /usr/bin/rpm -p x -k software_mgmt"   # RPM (Redhat/CentOS)
audit_rules[rules.software_managmenet_auditing,2]="-w /usr/bin/yum -p x -k software_mgmt"

audit_rules[rules.software_managmenet_auditing,3]="-w /usr/bin/dnf -p x -k software_mgmt"   # DNF (Fedora/RedHat 8/CentOS 8)

audit_rules[rules.software_managmenet_auditing,4]="-w /usr/bin/pip -p x -k software_mgmt"   # PIP (Python installs)
audit_rules[rules.software_managmenet_auditing,5]="-w /usr/bin/pip3 -p x -k software_mgmt"
audit_rules[rules.software_managmenet_auditing,d]="These rules are used for auditing Software Management related commands and actions, by monitoring the execution of rpm, yum, dnf, pipm pip3 modules"






## Docker
audit_rules[rules.docker,0]=9
audit_rules[rules.docker,1]="-w /usr/bin/docker -k docker"
audit_rules[rules.docker,2]="-w /usr/bin/docker-containerd -k docker"
audit_rules[rules.docker,3]="-w /usr/bin/docker-runc -k docker"
audit_rules[rules.docker,4]="-w /var/lib/docker -k docker"
audit_rules[rules.docker,5]="-w /etc/docker -k docker"
audit_rules[rules.docker,6]="-w /etc/sysconfig/docker -k docker"
audit_rules[rules.docker,7]="-w /etc/sysconfig/docker-storage -k docker"
audit_rules[rules.docker,8]="-w /usr/lib/systemd/system/docker.service -k docker"
audit_rules[rules.docker,9]="-w /usr/bin/dockerd -k docker"
audit_rules[rules.docker,d]="These rules are used for auditing docker binaries and configuration files"


# High Volume Events ----------------------------------------------------------
## Remove them if they cause to much volume in your environment

## Root command executions
audit_rules[rules.root_command_execution,0]=2
audit_rules[rules.root_command_execution,1]="-a always,exit -F arch=b64 -F euid=0 -S execve -k rootcmd"
audit_rules[rules.root_command_execution,2]="-a always,exit -F arch=b32 -F euid=0 -S execve -k rootcmd"
audit_rules[rules.root_command_execution,d]="This rule is used to log any command executed with root privileges, This rule considered as High Volume Event and it may overwhelm the log file. just skipp it if causes too much volume in your environment"

## File Deletion Events by User
audit_rules[rules.file_deletion,0]=2
audit_rules[rules.file_deletion,1]="-a always,exit -F arch=b32 -S rmdir -S unlink -S unlinkat -S rename -S renameat -F auid>=1000 -F auid!=-1 -k delete"
audit_rules[rules.file_deletion,2]="-a always,exit -F arch=b64 -S rmdir -S unlink -S unlinkat -S rename -S renameat -F auid>=1000 -F auid!=-1 -k delete"
audit_rules[rules.file_deletion,d]="This rule is set to detect any file deletion action, It considered as High Volume Event and it may overwhelm the log file. just skipp it if causes too much volume in your environment "




### Unauthorized events (unsuccessful)
audit_rules[rules.unauthorized_file_system_actions,0]=12

### Unseccessful Access
audit_rules[rules.unauthorized_file_system_actions,1]="-a always,exit -F arch=b32 -S creat -S open -S openat -S open_by_handle_at -S truncate -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=-1 -k file_access"
audit_rules[rules.unauthorized_file_system_actions,2]="-a always,exit -F arch=b32 -S creat -S open -S openat -S open_by_handle_at -S truncate -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=-1 -k file_access"
audit_rules[rules.unauthorized_file_system_actions,3]="-a always,exit -F arch=b64 -S creat -S open -S openat -S open_by_handle_at -S truncate -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=-1 -k file_access"
audit_rules[rules.unauthorized_file_system_actions,4]="-a always,exit -F arch=b64 -S creat -S open -S openat -S open_by_handle_at -S truncate -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=-1 -k file_access"

### Unsuccessful Creation
audit_rules[rules.unauthorized_file_system_actions,5]="-a always,exit -F arch=b32 -S creat,link,mknod,mkdir,symlink,mknodat,linkat,symlinkat -F exit=-EACCES -k file_creation"
audit_rules[rules.unauthorized_file_system_actions,6]="-a always,exit -F arch=b64 -S mkdir,creat,link,symlink,mknod,mknodat,linkat,symlinkat -F exit=-EACCES -k file_creation"
audit_rules[rules.unauthorized_file_system_actions,7]="-a always,exit -F arch=b32 -S link,mkdir,symlink,mkdirat -F exit=-EPERM -k file_creation"
audit_rules[rules.unauthorized_file_system_actions,8]="-a always,exit -F arch=b64 -S mkdir,link,symlink,mkdirat -F exit=-EPERM -k file_creation"

### Unsuccessful Modification
audit_rules[rules.unauthorized_file_system_actions,9]="-a always,exit -F arch=b32 -S rename -S renameat -S truncate -S chmod -S setxattr -S lsetxattr -S removexattr -S lremovexattr -F exit=-EACCES -k file_modification"
audit_rules[rules.unauthorized_file_system_actions,10]="-a always,exit -F arch=b64 -S rename -S renameat -S truncate -S chmod -S setxattr -S lsetxattr -S removexattr -S lremovexattr -F exit=-EACCES -k file_modification"
audit_rules[rules.unauthorized_file_system_actions,11]="-a always,exit -F arch=b32 -S rename -S renameat -S truncate -S chmod -S setxattr -S lsetxattr -S removexattr -S lremovexattr -F exit=-EPERM -k file_modification"
audit_rules[rules.unauthorized_file_system_actions,12]="-a always,exit -F arch=b64 -S rename -S renameat -S truncate -S chmod -S setxattr -S lsetxattr -S removexattr -S lremovexattr -F exit=-EPERM -k file_modification"

audit_rules[rules.unauthorized_file_system_actions,d]="These rules are used to detect Unauthorized file-system related events (unsuccessful Files Access, Modification, Creation)"




## 32bit API Exploitation
### If you are on a 64 bit platform, everything _should_ be running
### in 64 bit mode. This rule will detect any use of the 32 bit syscalls
### because this might be a sign of someone exploiting a hole in the 32
### bit API.
audit_rules[rules.detect_32,0]=1
audit_rules[rules.detect_32,1]="-a always,exit -F arch=b32 -S all -k 32bit_api"
audit_rules[rules.detect_32,d]="This rule detects any use of 32 bit syscalls because this might be a sign of someone exploiting a hole in 32 bit mode"

